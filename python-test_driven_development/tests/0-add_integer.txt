This is the doctest for the add_integer module.

The function `add_integer(a, b=98)` adds two integers.

>>> add_integer = __import__('0-add_integer').add_integer

# Test with two positive integers
>>> add_integer(1, 2)
3

# Test with a positive and a negative integer
>>> add_integer(100, -2)
98

# Test with one argument, using the default value for b
>>> add_integer(2)
100

# Test with one float argument, using the default value for b
>>> add_integer(100.3)
198

# Test with a float and an integer
>>> add_integer(100.3, -2)
98

# Test with two floats
>>> add_integer(2.7, 3.3)
5

# Test with two negative floats
>>> add_integer(-1.5, -2.5)
-3

# Test with zero
>>> add_integer(0, 0)
0

# Test with a negative integer and zero
>>> add_integer(-5, 0)
-5

# Test with large numbers
>>> add_integer(9999999999, 1)
10000000000

# Test with float overflow
>>> add_integer(1e100, 1e100)
20000000000000000318057822195198360936721617127890562779562655115495677544340762121626939971713630208

# Test with float NaN
>>> add_integer(float('nan'))
Traceback (most recent call last):
    ...
ValueError: cannot convert float NaN to integer

# Test with float infinity
>>> add_integer(float('inf'))
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer

# Test with string for b
>>> add_integer(4, "School")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

# Test with None for a
>>> add_integer(None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

# Test with string for a
>>> add_integer("hello", 5)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

# Test with a list for a
>>> add_integer([1, 2], 3)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

# Test with a tuple for b
>>> add_integer(10, (1, 2))
Traceback (most recent call last):
    ...
TypeError: b must be an integer

# Test with two arguments, where the second is None
>>> add_integer(1, None)
Traceback (most recent call last):
    ...
TypeError: b must be an integer
